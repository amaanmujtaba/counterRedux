{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    inc(state, action) {\n      state.counter++;\n    },\n    dec(state, action) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggle(state, counter) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuth: false\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuth = true;\n    },\n    logout(state) {\n      state.isAuth = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;\n\n/*\r\nconst reducer = (state = initial, action) => {\r\n    if(action.type === \"inc\") {\r\n        return {\r\n            ...state,\r\n            counter: state.counter + 1\r\n        };\r\n    }\r\n\r\n    if(action.type === \"increaseBy\"){\r\n        return(\r\n            {\r\n                ...state,\r\n                counter : state.counter + action.payload\r\n            }\r\n        )\r\n    }\r\n    if(action.type === \"dec\") {\r\n        return {\r\n            ...state,\r\n            counter: state.counter - 1\r\n        };\r\n    }\r\n\r\n    if(action.type === \"toggle\"){\r\n        return {\r\n            ...state,\r\n            showCounter : !state.showCounter\r\n        }\r\n    }\r\n    return state;\r\n};\r\n\r\nconst store = createStore(reducer);\r\n*/\n//  export default store;","map":{"version":3,"names":["configureStore","createSlice","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","inc","state","action","dec","increase","payload","toggle","initialAuthState","isAuth","authSlice","login","logout","store","reducer","counterActions","actions"],"sources":["C:/Users/amaan/OneDrive/Desktop/React/reduc-counter-proj/01-starting-project/src/store/index.js"],"sourcesContent":["\r\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\n\r\nconst initialCounterState = {\r\n    counter: 0,\r\n    showCounter: true\r\n};\r\n\r\n\r\nconst counterSlice = createSlice({\r\n    name: \"counter\",\r\n    initialState: initialCounterState,\r\n    reducers:{\r\n        inc(state,action){\r\n            state.counter++;\r\n        },\r\n        dec(state, action){\r\n            state.counter--;\r\n        },\r\n        increase(state, action){\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        toggle(state, counter){\r\n            state.showCounter = !state.showCounter\r\n        }\r\n\r\n    }\r\n}\r\n)\r\n\r\n\r\nconst initialAuthState = { isAuth : false};\r\n\r\nconst authSlice = createSlice({\r\n    name : \"auth\",\r\n    initialState: initialAuthState,\r\n\r\n    reducers:{\r\n        login(state){\r\n            state.isAuth = true;\r\n        },\r\n        logout(state){\r\n            state.isAuth = false;\r\n\r\n        }\r\n    }\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer : counterSlice.reducer\r\n});\r\nexport const counterActions = counterSlice.actions;\r\nexport default store;\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nconst reducer = (state = initial, action) => {\r\n    if(action.type === \"inc\") {\r\n        return {\r\n            ...state,\r\n            counter: state.counter + 1\r\n        };\r\n    }\r\n\r\n    if(action.type === \"increaseBy\"){\r\n        return(\r\n            {\r\n                ...state,\r\n                counter : state.counter + action.payload\r\n            }\r\n        )\r\n    }\r\n    if(action.type === \"dec\") {\r\n        return {\r\n            ...state,\r\n            counter: state.counter - 1\r\n        };\r\n    }\r\n\r\n    if(action.type === \"toggle\"){\r\n        return {\r\n            ...state,\r\n            showCounter : !state.showCounter\r\n        }\r\n    }\r\n    return state;\r\n};\r\n\r\nconst store = createStore(reducer);\r\n*/\r\n//  export default store;\r\n"],"mappings":"AACA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAI9D,MAAMC,mBAAmB,GAAG;EACxBC,OAAO,EAAE,CAAC;EACVC,WAAW,EAAE;AACjB,CAAC;AAGD,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAC;IACLC,GAAGA,CAACC,KAAK,EAACC,MAAM,EAAC;MACbD,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,GAAGA,CAACF,KAAK,EAAEC,MAAM,EAAC;MACdD,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDU,QAAQA,CAACH,KAAK,EAAEC,MAAM,EAAC;MACnBD,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGQ,MAAM,CAACG,OAAO;IAClD,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAEP,OAAO,EAAC;MAClBO,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IAC1C;EAEJ;AACJ,CACA,CAAC;AAGD,MAAMY,gBAAgB,GAAG;EAAEC,MAAM,EAAG;AAAK,CAAC;AAE1C,MAAMC,SAAS,GAAGjB,WAAW,CAAC;EAC1BK,IAAI,EAAG,MAAM;EACbC,YAAY,EAAES,gBAAgB;EAE9BR,QAAQ,EAAC;IACLW,KAAKA,CAACT,KAAK,EAAC;MACRA,KAAK,CAACO,MAAM,GAAG,IAAI;IACvB,CAAC;IACDG,MAAMA,CAACV,KAAK,EAAC;MACTA,KAAK,CAACO,MAAM,GAAG,KAAK;IAExB;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMI,KAAK,GAAGrB,cAAc,CAAC;EACzBsB,OAAO,EAAGjB,YAAY,CAACiB;AAC3B,CAAC,CAAC;AACF,OAAO,MAAMC,cAAc,GAAGlB,YAAY,CAACmB,OAAO;AAClD,eAAeH,KAAK;;AAOpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}