{"ast":null,"code":"import { redux } from \"redux\";\nconst initial = {\n  counter: 0\n};\nconst reducer = (state, action) => {\n  if (action.type === \"inc\") {\n    return {\n      counter: state.counter + 1\n    };\n  }\n  if (action.type === \"dec\") {\n    return {\n      counter: state.counter - 1\n    };\n  }\n  return state;\n};\nconst store = redux.createStore(reducer);\nexport default store;\n\n/*\r\nconst countSub = () =>{\r\n    const latestState = state.getState();\r\n    console.log(latest);\r\n}\r\n\r\nstore.subscribe(countSub);\r\n\r\nstore.dispatch({type : \"inc\"});\r\n*/","map":{"version":3,"names":["redux","initial","counter","reducer","state","action","type","store","createStore"],"sources":["C:/Users/amaan/OneDrive/Desktop/React/reduc-counter-proj/01-starting-project/src/store/index.js"],"sourcesContent":["import { redux } from \"redux\";\r\n\r\n\r\nconst initial = {\r\n    counter: 0\r\n}\r\nconst reducer = (state, action) => {\r\n    if(action.type === \"inc\"){\r\n        return(\r\n            {\r\n                counter: state.counter+1\r\n            }\r\n        );\r\n    }\r\n    if(action.type === \"dec\"){\r\n        return(\r\n            {\r\n                counter:state.counter-1\r\n            }\r\n        )\r\n    }\r\n    return state;\r\n}\r\n\r\nconst store = redux.createStore( reducer );\r\n\r\nexport default store;\r\n\r\n/*\r\nconst countSub = () =>{\r\n    const latestState = state.getState();\r\n    console.log(latest);\r\n}\r\n\r\nstore.subscribe(countSub);\r\n\r\nstore.dispatch({type : \"inc\"});\r\n*/\r\n\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,OAAO;AAG7B,MAAMC,OAAO,GAAG;EACZC,OAAO,EAAE;AACb,CAAC;AACD,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC/B,IAAGA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAC;IACrB,OACI;MACIJ,OAAO,EAAEE,KAAK,CAACF,OAAO,GAAC;IAC3B,CAAC;EAET;EACA,IAAGG,MAAM,CAACC,IAAI,KAAK,KAAK,EAAC;IACrB,OACI;MACIJ,OAAO,EAACE,KAAK,CAACF,OAAO,GAAC;IAC1B,CAAC;EAET;EACA,OAAOE,KAAK;AAChB,CAAC;AAED,MAAMG,KAAK,GAAGP,KAAK,CAACQ,WAAW,CAAEL,OAAQ,CAAC;AAE1C,eAAeI,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}